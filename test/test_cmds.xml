<root>
  <li test_name="test_oct_1"><command mode="test_oct"/></li>
  <li test_name="vst_1">
    <command mode="vst" 
	     u64="23" dpf="3.4" pdpf="3.2" >
      <vdpf li_0="1.5" li_1="2.3"/>
      <vu64 li_0="0" li_1="2" li_2="0"/> 
    </command>
  </li>
  <li test_name="vst_2" cli_str="boda vst --dpf=4.3 --nda=(tn=float,v=5.4) "/>
  <li test_name="vst_3" cli_str="boda vst --dpf=4.3 --nda=(tn=uint32_t,dims=(v=3),v=5:12:19) "/>
  <li test_name="load_pil_1"> <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.txt" /> </li>
  <li test_name="load_pil_2" err="error: invalid type string in image list file '%(boda_test_dir)/pascal/bicycle_10.inv_1.txt': saw '', expected '1', '-1', or '0'." >
    <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.inv_1.txt"/>
  </li>
  <li test_name="load_pil_3" err="error: invalid line in image list file '%(boda_test_dir)/pascal/bicycle_10.inv_2.txt': num of parts != 2 after space splitting. line was:&#10;000006" >
    <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.inv_2.txt"/>
  </li>
  <li test_name="load_pil_4" err="error: tried to load annotations multiple times for id '000001'" >
    <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.inv_3.txt"/>
  </li>
  <li test_name="score_1" slow="1" >
    <command mode="score" 
	     pil_fn="%(pascal_data_dir)/ImageSets/Main/bicycle_test.txt" 
	     res_fn="%(ffld_dir)/build/ffld_VOC2007_bicycle_test_out.txt" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     /></li>
  <li test_name="score_2" err="error: tried to get ix for unloaded img_id '006237'">
    <command mode="score" 
	     pil_fn="%(boda_test_dir)/pascal/bicycle_10.txt"
	     res_fn="%(boda_test_dir)/pascal/bicycle_out_10.txt"
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     /></li>
  <li test_name="score_3">
    <command mode="score" 
	     pil_fn="%(boda_test_dir)/pascal/bicycle_100.txt"
	     res_fn="%(boda_test_dir)/pascal/bicycle_out_100.txt"
	     prc_png_fn=""
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     /></li>
  <li test_name="run_dfc_1" slow="1"> 
    <command mode="run_dfc" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     pil_fn="%(boda_test_dir)/pascal/head_1/%%s.txt"
	     /> 
  </li>
  <li test_name="run_dfc_10" slow="1"> 
    <command mode="run_dfc" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_10/pascal_classes.txt"
	     pil_fn="%(boda_test_dir)/pascal/head_10/%%s.txt"
	     /> 
  </li>
  <li test_name="run_dfc_100" slow="1"> 
    <command mode="run_dfc" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_100/pascal_classes.txt"
	     pil_fn="%(boda_test_dir)/pascal/head_100/%%s.txt"
	     /> 
  </li>
  <li test_name="oct_featpyra_1"> 
  <command mode="oct_featpyra" image_list_fn="%(boda_test_dir)/plasma_imgs.txt" /> </li>
  <li test_name="oct_featpyra_2" slow="1"> 
  <command mode="oct_featpyra" image_list_fn="%(boda_test_dir)/pascal_imgs_10.txt" /> </li>

  <li test_name="oct_resize_1"> 
  <command mode="oct_resize" image_list_fn="%(boda_test_dir)/plasma_imgs.txt" /> </li>
  <li test_name="oct_resize_2" slow="1"> 
  <command mode="oct_resize" image_list_fn="%(boda_test_dir)/pascal_imgs_10.txt" /> </li>

  <li test_name="blf_pack_1" 
      err="error: box (*i)=50 50 cannot be placed into empty bin of shape (0 0)(40 40) (i.e. box to place > bin size)" >
  <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="40"/>
  </li>
  <li test_name="blf_pack_2"> <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="50"/></li>
  <li test_name="blf_pack_3"> <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="100"/></li>
  <li test_name="blf_pack_4"> <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="500"/></li>
  <li test_name="conv_ana_1"> <command mode="conv_ana" out_sz="6" in_sz="227" ignore_padding_for_support="1"  ><convs>
    <li tag="conv1" type="Convolution"><nda_vals>
      <kern_sz tn="none"><dims y="11" x="11"/></kern_sz><stride tn="none"><dims y="4" x="4"/></stride>
    </nda_vals></li>
    <li tag="pool1" type="Pooling"><nda_vals>
      <kern_sz tn="none"><dims y="3" x="3"/></kern_sz> <stride tn="none"><dims y="2" x="2"/></stride>
    </nda_vals></li>
    <li tag="conv2" type="Convolution"><nda_vals>
      <kern_sz tn="none"><dims y="5" x="5"/></kern_sz> <in_pad tn="none"><dims y="2" x="2"/></in_pad>
    </nda_vals></li>
    <li tag="pool2" type="Pooling"><nda_vals>
      <kern_sz tn="none"><dims y="3" x="3"/></kern_sz> <stride tn="none"><dims y="2" x="2"/></stride>
    </nda_vals></li>
    <li tag="conv3" type="Convolution"><nda_vals>
      <kern_sz tn="none"><dims y="3" x="3"/></kern_sz> <in_pad tn="none"><dims y="1" x="1"/></in_pad>
    </nda_vals></li>
    <li tag="conv4" type="Convolution"><nda_vals>
      <kern_sz tn="none"><dims y="3" x="3"/></kern_sz> <in_pad tn="none"><dims y="1" x="1"/></in_pad>
    </nda_vals></li>
    <li tag="conv5" type="Convolution"><nda_vals>
      <kern_sz tn="none"><dims y="3" x="3"/></kern_sz> <in_pad tn="none"><dims y="1" x="1"/></in_pad>
    </nda_vals></li>
    <li tag="pool5" type="Pooling"> <nda_vals>
      <kern_sz tn="none"><dims y="3" x="3"/></kern_sz> <stride tn="none"><dims y="2" x="2"/></stride>
    </nda_vals></li>

  </convs></command></li>
  <li test_name="conv_ana_xml"> <command mode="conv_ana" out_sz="6" in_sz="227" ignore_padding_for_support="1" XML_INC_convs="conv_pyra_pipe.xml:convs"/></li>
  <li test_name="conv_ana_xml_2" cli_str="boda conv_ana --out-sz=12 --in-sz=227 --ignore-padding-for-support=1 --XML_INC_convs=../../test/conv_pyra_pipe.xml:convs"/>

  <li test_name="test_rtc_nvrtc" cli_str="boda rtc_test --rtc='(be=nvrtc)' --prog-fn='%(boda_test_dir)/nvrtc_test_dot.cu"/>
  <li test_name="test_rtc_ocl" cli_str="boda rtc_test --rtc='(be=ocl)' --prog-fn='%(boda_test_dir)/ocl_test_dot.cl'"/>
  <li test_name="test_rtc_cucl_nvrtc" cli_str="boda rtc_test --rtc='(be=nvrtc)' "/>
  <li test_name="test_rtc_cucl_ocl" cli_str="boda rtc_test --rtc='(be=ocl)' "/>
  <li test_name="test_rtc_cucl_ipc" cli_str="boda rtc_test --rtc='(be=ipc)' "/>
  <li test_name="test_rtc_cucl_ipc_tcp" cli_str="boda rtc_test --rtc='(be=ipc,boda_parent_addr=tcp:127.0.0.1:12791)' "/>

  <li test_name="test_dense_1" cli_str="boda test_dense --model-name=nin_imagenet_nopad --wins_per_image=10000"/>
  <li test_name="test_dense_2" cli_str="boda test_dense --model-name=nin_imagenet --wins_per_image=10000 --run_cnet='(in_dims=(img=1,y=227,x=227),out_node_name=cccp8)'"/>
  <li test_name="test_upsamp_1" cli_str="boda test_upsamp --model-name=nin_imagenet_nopad --wins_per_image=3"/>
  <li test_name="test_quantize_1" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1,y=227,x=227),out_node_name=conv1)' --cf2='(mode=rtc,quantize=(_=(name=conv1,max_val=1024,keep_bits=9)))' --diff-show-mad-only=1 --max-err=10" />
  <li test_name="test_stats_1" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1,y=227,x=227),out_node_name=conv1)' --cf2='(mode=rtc,enable_stats=1)' --max-err=10" />

  <li test_name="test_upsamp_1_nvrtc" cli_str="boda test_upsamp --model-name nin_imagenet_nopad --wins-per-image=3 --run-cnet='(in_dims=(img=1,y=516,x=516),enable_upsamp_net=1,out_node_name=cccp8,conv_fwd=(mode=rtc),conv_fwd_upsamp=(mode=rtc,op_tune=(tconv=1)))'"/>

<!-- note: for alexnet and googlenet, while the errors on the 'output' nodes (fc8, cls{1,2,3}_fc) are 1e-5, we need to use pretty high tolerances for comparing other nodes (5e-4). this seems perhaps mostly due to disagreements in LRN -- see comments in lrn.cucl -- but probably deserves more attention. --> 
  <li test_name="test_compute_alexnet" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20))' --cf2='(mode=rtc,per_call_fn=out.py)' --max-err=1 --mad-toler=5e-4 --var-mad-toler='(fc8=1e-5)'"/>

  <li test_name="test_compute_alexnet_mutated_for_testing_opt" cli_str="boda test_compute --model-name=alexnet_ng_conv_mutated_for_testing --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20))' --cf2='(mode=rtc,per_call_fn=out.py,op_tune=(k1conv=1,tconv=1),enable_write_xpose=1)' --max-err=1 --mad-toler=5e-4 --var-mad-toler=(fc8=1e-5,pool1=1e-3,norm1=1e-3)"/>

  <li test_name="test_compute_nin" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20,y=227,x=227))' --cf2='(mode=rtc,per_call_fn=out.py)' --max-err=1 "/>
  <li test_name="test_compute_googlenet_conv" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20,y=227,x=227))' --cf2='(mode=rtc,per_call_fn=out.py)' --max-err=1 --mad-toler=5e-4 --var-mad-toler='(cls1_fc=1e-5,cls2_fc=1e-5,cls3_fc=1e-5,conv2=1e-3,reduction2=1e-3,norm1=1e-3)' "/>

<!--
  <li test_name="test_compute_alexnet_s1c" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims(img=20))' --cf2='(mode=rtc,per_call_fn=out.py,enable_s1conv=1)' --max-err=1 "/>
  <li test_name="test_compute_nin_s1c" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims(img=20))' --cf2='(mode=rtc,per_call_fn=out.py,enable_s1conv=1)' --max-err=1 "/>
  <li test_name="test_compute_googlenet_conv_s1c" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims(img=20))' --cf2='(mode=rtc,per_call_fn=out.py,enable_s1conv=1)' --max-err=1 "/>
-->

  <li test_name="test_compute_alexnet_opt" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20))' --cf2='(mode=rtc,per_call_fn=out.py,op_tune=(k1conv=1,tconv=1),enable_write_xpose=1)' --max-err=1 --mad-toler=5e-4 --var-mad-toler=(fc8=1e-5)"/>
  <li test_name="test_compute_nin_opt" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20,y=227,x=227))' --cf2='(mode=rtc,per_call_fn=out.py,op_tune=(k1conv=1,tconv=1),enable_write_xpose=1)' --max-err=1 "/>
  <li test_name="test_compute_googlenet_conv_opt" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20,y=227,x=227))' --cf2='(mode=rtc,per_call_fn=out.py,op_tune=(k1conv=1,tconv=1),enable_write_xpose=1)' --max-err=1 --mad-toler=5e-4 --var-mad-toler='(cls1_fc=1e-5,cls2_fc=1e-5,cls3_fc=1e-5,conv2=1e-3,reduction2=1e-3,norm1=1e-3)'"/>

<!-- FIXME: add a test that uses Softmax and/or remove support for it
  <li test_name="test_compute_alexnet_prob" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=20))' --cf2='(mode=rtc,per_call_fn=out.py)' --max-err=1 "/>
-->

  <li test_name="test_grad_googlenet_conv" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=5,y=227,x=227),add_bck_ops=1)' --cf2='(mode=rtc,per_call_fn=out.py)' --max-err=1 --mad-toler=5e-4 --var-mad-toler='(cls1_fc=1e-5,cls2_fc=1e-5,cls3_fc=1e-5,conv2=1e-3,reduction2=1e-3,norm1=1e-3)'"/>
  <li test_name="test_grad_googlenet_conv_opt" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=5,y=227,x=227),add_bck_ops=1)' --cf2='(mode=rtc,per_call_fn=out.py,op_tune=(k1conv=1,tconv=1),enable_write_xpose=1)' --max-err=1 --mad-toler=5e-4 --var-mad-toler='(cls1_fc=1e-5,cls2_fc=1e-5,cls3_fc=1e-5,conv2=1e-3,reduction2=1e-3,norm1=1e-3)'"/>

<li test_name="test_grad_nin" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=nvrtc),show_rtc_calls=0,per_call_fn=out.py)' --max-err=10 --mad-toler=2e-5  --var-mad-toler='(cccp8-1024_filts_grad_loss=5e-5,cccp1_filts_grad_loss=5e-5,cccp6_filts_grad_loss=3e-5)'" />
<li test_name="test_grad_nin_bconv" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=ocl),show_rtc_calls=0,per_call_fn=out.py,enable_bconv=1)' --max-err=10 --mad-toler=2e-5  --var-mad-toler='(cccp8-1024_filts_grad_loss=5e-5,cccp1_filts_grad_loss=5e-5,cccp6_filts_grad_loss=3e-5)'" />

<li test_name="test_grad_alexnet_nd_nl" cli_str="boda test_compute --model-name=alexnet_ng_conv_nd_nl --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=ocl),show_rtc_calls=0,per_call_fn=out.py)' --max-err=10 --mad-toler=2.5e-5  --var-mad-toler='(fc8-conv_filts_grad_loss=7e-5)'" />
<li test_name="test_grad_alexnet_nd_nl_bconv" cli_str="boda test_compute --model-name=alexnet_ng_conv_nd_nl --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=nvrtc),show_rtc_calls=0,per_call_fn=out.py,enable_bconv=1)' --max-err=10 --mad-toler=2.5e-5  --var-mad-toler='(fc8-conv_filts_grad_loss=7e-5)'" />

<li test_name="test_grad_alexnet" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=ocl),show_rtc_calls=0,per_call_fn=out.py)' --max-err=10 --mad-toler=1e-4  --var-mad-toler='(fc8-conv_filts_grad_loss=7e-5,norm1=5e-4,pool1=5e-4,conv2=5e-4,norm2=5e-4,pool2=5e-4,conv3=2e-4,conv4=2e-4,norm1_grad_loss=5e-3,norm2_grad_loss=5e-3)'" />

<li test_name="test_grad_alexnet_bconv" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=nvrtc),show_rtc_calls=0,per_call_fn=out.py,enable_bconv=1)' --max-err=10 --mad-toler=1e-4  --var-mad-toler='(fc8-conv_filts_grad_loss=7e-5,norm1=5e-4,pool1=5e-4,conv2=5e-4,norm2=5e-4,pool2=5e-4,conv3=2e-4,conv4=2e-4,norm1_grad_loss=5e-3,norm2_grad_loss=5e-3)'" />

<!-- FIXME: some MAD values seem too high for these firenet tests ... especially the 3e-2 (!) for conv1_filts_grad_loss -->
<li test_name="test_grad_firenet" cli_str="boda test_compute --model-name=firenet8-CE-0.125-nofinalpad --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=3))' --cf2='(mode=rtc,rtc=(be=ocl),per_call_fn=out.py,show_rtc_calls=0,enable_bconv=0)' --max-err=1 --mad-toler=7e-5 --var-mad-toler='(fire8/concat_grad_loss=2e-3,fire4/concat_grad_loss=1e-3,conv1_grad_loss=1e-4,conv1_filts_grad_loss=3e-2,conv1_biases_grad_loss=2e-4,conv_final_filts_grad_loss=2e-4)' --add-bck-ops=1" />

<li test_name="test_grad_firenet_bconv" cli_str="boda test_compute --model-name=firenet8-CE-0.125-nofinalpad --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=3))' --cf2='(mode=rtc,rtc=(be=ocl),per_call_fn=out.py,op_tune=(k1conv=1,tconv=1),enable_write_xpose=1,show_rtc_calls=0,enable_bconv=1)' --max-err=1 --mad-toler=7e-5 --var-mad-toler='(fire8/concat_grad_loss=2e-3,fire4/concat_grad_loss=1e-3,conv1_grad_loss=1e-4,conv1_filts_grad_loss=3e-2,conv1_biases_grad_loss=2e-4,conv_final_filts_grad_loss=2e-4)' --add-bck-ops=1" />

<li test_name="test_grad_strides" cli_str="boda test_compute --model-name=bconv_strides_1 --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=ocl),show_rtc_calls=0,per_call_fn=out.py)' --max-err=10 --mad-toler=2e-5  --var-mad-toler='(cccp8-1024_filts_grad_loss=5e-5,cccp1_filts_grad_loss=5e-5)'" />
<li test_name="test_grad_strides_bconv" cli_str="boda test_compute --model-name=bconv_strides_1 --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_dims=(img=1),add_bck_ops=1)' --cf2='(mode=rtc,rtc=(be=ocl),show_rtc_calls=0,per_call_fn=out.py,enable_bconv=1)' --max-err=10 --mad-toler=2e-5  --var-mad-toler='(cccp8-1024_filts_grad_loss=5e-5,cccp1_filts_grad_loss=5e-5)'" />
<li test_name="test_cnn_op_info_1" cli_str="boda cnn_op_info --rtc='(be=ocl)' --gen-data='(type=gen_data,str_vals=(vi=0.0f,mode=600))' --rtc-comp='(be=nvrtc)'  --max-err=10 --cnn-func-sigs-fn='%(boda_test_dir)/sgemm-ops-debug.txt' --out-fn='%(boda_output_dir)/cnn_op_info.txt'" />
<li test_name="test_cnn_op_info_2" cli_str="boda cnn_op_info --rtc='(be=ocl)' --gen-data='(type=gen_data,str_vals=(vi=0.0f,mode=600))' --rtc-comp='(be=nvrtc)'  --max-err=10 --op-tune='(MNt=4:4,MNb=16:16,Kb=4,use_local_mem=0)' --cnn-func-sigs-fn='%(boda_test_dir)/sgemm-ops-debug.txt' --out-fn='%(boda_output_dir)/cnn_op_info.txt'" />
<li test_name="test_cnn_op_info_3" cli_str="boda cnn_op_info --rtc='(be=ocl)' --gen-data='(type=gen_data,str_vals=(vi=0.0f,mode=600))' --rtc-comp='(be=nvrtc)'  --max-err=10 --op-tune='(MNt=4:4,MNb=16:16,Kb=4,use_local_mem=2,vw=4)' --cnn-func-sigs-fn='%(boda_test_dir)/sgemm-ops-debug.txt' --out-fn='%(boda_output_dir)/cnn_op_info.txt'" />
<li test_name="test_cnn_op_info_4" cli_str="boda cnn_op_info --rtc='(be=ocl)' --gen-data='(type=gen_data,str_vals=(vi=0.0f,mode=5))' --rtc-comp='(be=nvrtc)'  --max-err=10 --op-tune='(MNt=4:4,MNb=16:16,Kb=4,use_local_mem=3,vw=4)' --cnn-func-sigs-fn='%(boda_test_dir)/sgemm-ops-debug.txt' --out-fn='%(boda_output_dir)/cnn_op_info.txt'" />


</root>
