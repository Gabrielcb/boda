<root>
  <li test_name="test_oct_1"><command mode="test_oct"/></li>
  <li test_name="vst_1">
    <command mode="vst" 
	     u64="23" dpf="3.4" pdpf="3.2" >
      <vdpf li_0="1.5" li_1="2.3"/>
      <vu64 li_0="0" li_1="2" li_2="0"/> 
    </command>
  </li>
  <li test_name="load_pil_1"> <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.txt" /> </li>
  <li test_name="load_pil_2" err="error: invalid type string in image list file '%(boda_test_dir)/pascal/bicycle_10.inv_1.txt': saw '', expected '1', '-1', or '0'." >
    <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.inv_1.txt"/>
  </li>
  <li test_name="load_pil_3" err="error: invalid line in image list file '%(boda_test_dir)/pascal/bicycle_10.inv_2.txt': num of parts != 2 after space splitting. line was:&#10;000006" >
    <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.inv_2.txt"/>
  </li>
  <li test_name="load_pil_4" err="error: tried to load annotations multiple times for id '000001'" >
    <command mode="load_pil" pil_fn="%(boda_test_dir)/pascal/bicycle_10.inv_3.txt"/>
  </li>
  <li test_name="score_1" slow="1" >
    <command mode="score" 
	     pil_fn="%(pascal_data_dir)/ImageSets/Main/bicycle_test.txt" 
	     res_fn="%(ffld_dir)/build/ffld_VOC2007_bicycle_test_out.txt" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     /></li>
  <li test_name="score_2" err="error: tried to get ix for unloaded img_id '006237'">
    <command mode="score" 
	     pil_fn="%(boda_test_dir)/pascal/bicycle_10.txt"
	     res_fn="%(boda_test_dir)/pascal/bicycle_out_10.txt"
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     /></li>
  <li test_name="score_3">
    <command mode="score" 
	     pil_fn="%(boda_test_dir)/pascal/bicycle_100.txt"
	     res_fn="%(boda_test_dir)/pascal/bicycle_out_100.txt"
	     prc_png_fn=""
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     /></li>
  <li test_name="run_dfc_1" slow="1"> 
    <command mode="run_dfc" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_1/pascal_classes.txt"
	     pil_fn="%(boda_test_dir)/pascal/head_1/%%s.txt"
	     /> 
  </li>
  <li test_name="run_dfc_10" slow="1"> 
    <command mode="run_dfc" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_10/pascal_classes.txt"
	     pil_fn="%(boda_test_dir)/pascal/head_10/%%s.txt"
	     /> 
  </li>
  <li test_name="run_dfc_100" slow="1"> 
    <command mode="run_dfc" 
	     pascal_classes_fn="%(boda_test_dir)/pascal/head_100/pascal_classes.txt"
	     pil_fn="%(boda_test_dir)/pascal/head_100/%%s.txt"
	     /> 
  </li>
  <li test_name="oct_featpyra_1"> 
  <command mode="oct_featpyra" image_list_fn="%(boda_test_dir)/plasma_imgs.txt" /> </li>
  <li test_name="oct_featpyra_2" slow="1"> 
  <command mode="oct_featpyra" image_list_fn="%(boda_test_dir)/pascal_imgs_10.txt" /> </li>

  <li test_name="oct_resize_1"> 
  <command mode="oct_resize" image_list_fn="%(boda_test_dir)/plasma_imgs.txt" /> </li>
  <li test_name="oct_resize_2" slow="1"> 
  <command mode="oct_resize" image_list_fn="%(boda_test_dir)/pascal_imgs_10.txt" /> </li>

  <li test_name="blf_pack_1" 
      err="error: box (*i)=50 50 cannot be placed into empty bin of shape (0 0)(40 40) (i.e. box to place > bin size)" >
  <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="40"/>
  </li>
  <li test_name="blf_pack_2"> <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="50"/></li>
  <li test_name="blf_pack_3"> <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="100"/></li>
  <li test_name="blf_pack_4"> <command mode="blf_pack" to_pack_fn="%(boda_test_dir)/blf_in_1.txt" bin_sz="500"/></li>
  <li test_name="conv_ana_1"> <command mode="conv_ana" out_sz="6" in_sz="227" 
				       ignore_padding_for_support="1" ignore_padding_for_sz="0" ><convs>
    <li tag="conv1" type="Convolution" in_pad="0 0 0 0" kern_sz="11 11" stride="4 4"/>
    <li tag="pool1" type="Pooling" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/>
    <li tag="conv2" type="Convolution" in_pad="2 2 2 2" kern_sz="5 5" stride="1 1"/>
    <li tag="pool2" type="Pooling" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/>
    <li tag="conv3" type="Convolution" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv4" type="Convolution" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv5" type="Convolution" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="pool5" type="Pooling" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/> 
  </convs></command></li>
  <li test_name="conv_ana_xml"> <command mode="conv_ana" out_sz="6" in_sz="227" ignore_padding_for_support="1" 
  ignore_padding_for_sz="0" XML_INC_convs="conv_pyra_pipe.xml:convs"/></li>
<!-- 
  <li test_name="conv_ana_2"> <command mode="conv_ana" out_sz="6" in_sz="227" 
				       ignore_padding_for_support="1" ignore_padding_for_sz="0" ><convs>
    <li tag="conv1" in_pad="0 0 0 0" kern_sz="7 7" stride="2 2"/>
    <li tag="pool1" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/>
    <li tag="conv2" in_pad="2 2 2 2" kern_sz="5 5" stride="1 1"/>
    <li tag="pool2" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/>
    <li tag="conv3" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv4" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv5" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
  </convs></command></li>
  # note missing padding of 5 on input/conv1, due to matching hard-coded padding in ross's matlab code 
  <li test_name="conv_ana_ross_pad_1"> <command mode="conv_ana" out_sz="1" in_sz="1723" 
				       ignore_padding_for_support="1" ignore_padding_for_sz="0" ><convs>
    <li tag="conv1" in_pad="0 0 0 0" kern_sz="11 11" stride="4 4"/>
    <li tag="pool1" in_pad="1 1 1 1" kern_sz="3 3" stride="2 2"/>
    <li tag="conv2" in_pad="2 2 2 2" kern_sz="5 5" stride="1 1"/>
    <li tag="pool2" in_pad="1 1 1 1" kern_sz="3 3" stride="2 2"/>
    <li tag="conv3" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv4" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv5" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
  </convs></command></li>
  <li test_name="conv_ana_ross_pad_2"> <command mode="conv_ana" out_sz="1" in_sz="1723" 
				       ignore_padding_for_support="1" ignore_padding_for_sz="0" ><convs>
    <li tag="conv1" in_pad="4 4 4 4" kern_sz="11 11" stride="4 4"/>
    <li tag="pool1" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/>
    <li tag="conv2" in_pad="3 3 3 3" kern_sz="5 5" stride="1 1"/>
    <li tag="pool2" in_pad="0 0 0 0" kern_sz="3 3" stride="2 2"/>
    <li tag="conv3" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv4" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
    <li tag="conv5" in_pad="1 1 1 1" kern_sz="3 3" stride="1 1"/>
  </convs></command></li>
-->

<!--
  <li test_name="oct_resize_0" slow="1"> 
    <command mode="oct_resize" 
	     image_fn="%(boda_test_dir)/pascal/000001.jpg"
	     /> 
  </li>
  <li test_name="oct_resize_2" slow="1"> 
    <command mode="oct_resize" 
	     image_fn="%(boda_test_dir)/plasma_25.png"
	     /> 
  </li>
  <li test_name="oct_resize_3" slow="1"> 
    <command mode="oct_resize" 
	     image_fn="%(boda_test_dir)/b2w.png"
	     /> 
  </li>
-->

  <li test_name="test_rtc_nvrtc" cli_str="boda rtc_test --rtc='(be=nvrtc)' --prog-fn='%(boda_test_dir)/nvrtc_test_dot.cu"/>
  <li test_name="test_rtc_ocl" cli_str="boda rtc_test --rtc='(be=ocl)' --prog-fn='%(boda_test_dir)/ocl_test_dot.cl'"/>
  <li test_name="test_rtc_cucl_nvrtc" cli_str="boda rtc_test --rtc='(be=nvrtc)' --prog-fn='%(boda_test_dir)/rtc/dot.cucl"/>
  <li test_name="test_rtc_cucl_ocl" cli_str="boda rtc_test --rtc='(be=ocl)' --prog-fn='%(boda_test_dir)/rtc/dot.cucl'"/>

  <li test_name="test_dense_1"> <command mode="test_dense" model_name="nin_imagenet_nopad" wins_per_image="10000"/></li>
  <li test_name="test_dense_2"> <command mode="test_dense" model_name="nin_imagenet" wins_per_image="10000"/></li>
  <li test_name="test_upsamp_1"> <command mode="test_upsamp" model_name="nin_imagenet_nopad" wins_per_image="3"/></li>
  <li test_name="test_upsamp_1_nvrtc" cli_str="boda test_upsamp --model-name nin_imagenet_nopad --wins-per-image=3 --run-cnet='(in_sz=516 516,enable_upsamp_net=1,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=cccp8,conv_fwd=(mode=rtc),conv_fwd_upsamp=(mode=rtc,enable_tconv=1))'"/>

  <li test_name="test_compute_alexnet" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=fc8)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=0)' --max-err=1 "/>

  <li test_name="test_compute_nin" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=pool4)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=0)' --max-err=1 "/>
  <li test_name="test_compute_googlenet_conv" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=cls3_fc)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=0)' --max-err=1 "/>

<!--
  <li test_name="test_compute_alexnet_s1c" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=fc8)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=1)' --max-err=1 "/>
  <li test_name="test_compute_nin_s1c" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=pool4)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=1)' --max-err=1 "/>
  <li test_name="test_compute_googlenet_conv_s1c" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=cls3_fc)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=1)' --max-err=1 "/>
-->

  <li test_name="test_compute_alexnet_opt" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=fc8)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=1,enable_k1conv=1,enable_tconv=1,enable_write_xpose=1)' --max-err=1 "/>
  <li test_name="test_compute_nin_opt" cli_str="boda test_compute --model-name=nin_imagenet --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=pool4)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=1,enable_k1conv=1,enable_tconv=1,enable_write_xpose=1)' --max-err=1 "/>
  <li test_name="test_compute_googlenet_conv_opt" cli_str="boda test_compute --model-name=googlenet_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=cls3_fc)' --cf1='(mode=rtc,per_call_fn=plt.py,enable_s1conv=1,enable_k1conv=1,enable_tconv=1,enable_write_xpose=1)' --max-err=1 "/>

<!-- FIXME: add a test that uses Softmax and/or remove support for it
  <li test_name="test_compute_alexnet_prob" cli_str="boda test_compute --model-name=alexnet_ng_conv --wins-per-image=1 --imgs='(pil_fn=%(boda_test_dir)/pascal/head_1/%%s.txt)' --run-cnet='(in_sz=227 227,in_num_imgs=20,ptt_fn=%(models_dir)/%(model_name)/train_val.prototxt,trained_fn=%(models_dir)/%(model_name)/best.caffemodel,out_node_name=prob)' --cf1='(mode=rtc,per_call_fn=plt.py)' --max-err=1 "/>
-->

</root>
