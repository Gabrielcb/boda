end2end net structure:

rcnn e2e test time:

oringinal VGG16:
data -> conv1_1 -> ... -> conv5_3 -> conv 5_4 --> pool5 --> fc6 --> fc7 --> fc8 (+label) -(SM)-> prob

RCNN-HEAD:

im_info[3] --<1>
data[1,ysz,xsz,3] -> conv1_1 -> ... -> conv5_3 -(3x3)-> --<2> 
*notes: num_classes=21 in data layer: VOC 20 classes + background; im_info is 3 values: {ysz,xsz,scale}

RPN:
 conv5_3 -(3x3)--> rpn/output --v-(1x1)-> rpn_cls_score -> rpn_cls_share_reshape --<1>
                                --(1x1)-> rpb_bbox_pred --<1>

*notes: rpn/output: spatially-dense, num_output=18  (fixed) == (2: bg/fg)*(9 anchors) (note: 9 anchors == (3 sizes)*(3 scales)
        rpn_bbox_pred: spatially-dense, num_output=36 (fixed) == (4 bbox coords)*(9 anchors)

RoI Proposal:                                                  im_info ----v
                                                         rpn_bbox_pred --v |
   rpn_cls_share_reshape -(SM)-> rpn_cls_prob --> rpn_cls_prob_reshape ------(rpn.proposal_layer)-> rois

RCNN:
   conv5_3 --v
      rois ----(ROIPooling)--> pool5 

*notes: roi_pooling_param { pooled_w: 7 pooled_h: 7 spatial_scale: 0.0625 # 1/16 } --- depends on ???

RCNN-TAIL:
    pool5 --> fc6 --> fc7 --(IP)-> cls_score -(SM)-> cls_prob --(SINK)
                          ^-(IP)-> bbox_pred --(SINK)

*notes: bbox_pred num_output=84 == (4 bbox coords)*(21 classes)

rcnn e2e train time:

oringinal VGG16:
data -> conv1_1 -> ... -> conv5_3 -> conv 5_4 --> pool5 --> fc6 --> fc7 --> fc8 (+label) ---> accuracy@5
label ------------------------------------------------------------------------------------^

RCNN-HEAD:

im_info --<1>
data -> conv1_1 -> ... -> conv5_3 -(3x3)-> --<2> 
*notes: num_classes=21 in data layer: VOC 20 classes + background; im_info is 3 values: ???

RPN:
 conv5_3 -(3x3)--> rpn/output --v-(1x1)-> rpn_cls_score -> rpn_cls_share_reshape --<1>
                                --(1x1)-> rpb_bbox_pred --<1>

  rpn_cls_score ---v                              v----> rpn_labels
  gt_boxes ----v   |                              |v---> rpn_bbox_targets
  im_info --v  |   |    *note: feat_stride=16     ||v--> rpn_bbox_inside_weights
  data ----------------(rpn.anchor_target_layer) ------> rpn_bbox_output_weights

         rpn_labels ---v
rpn_cls_score_reshape ---(SMwL: ingore_label=-1)--> rpn_cls_loss

rpn_bbox_pred ----------------v
rpn_bbox_targets -----------v |
rpn_bbox_inside_weights --v | |
rpn_bbox_output_weights --------(SmoothL1Loss: sigma=3.0)--> rpn_bbox_loss


RoI Proposal:                                                  im_info ----v
                                                         rpn_bbox_pred --v |
   rpn_cls_share_reshape -(SM)-> rpn_cls_prob --> rpn_cls_prob_reshape ------(rpn.proposal_layer)-> rpn_rois (note: *not* rois)
 
   gt_boxes --v                             v--> rois
   rpn_rois ---(rpn.proposal_target_layer)-----> labels
                                           ||^-> bbox_targets
					   |^--> bbox_inside_weights
					   ^---> bbox_outside_weights
					   

RCNN:
   conv5_3 --v
      rois ----(ROIPooling)--> pool5 

RCNN-TAIL:
    pool5 --> fc6 --> fc7 --(IP)-> cls_score -(SM)-> cls_prob --(SINK)
                          ^-(IP)-> bbox_pred --(SINK)

RCNN-TAIL-LOSS:

  cls_score ---v
  labels ---------(SMwL)--> loss_cls

  bbox_pred ----------------v
  bbox_targets -----------v |
  bbox_inside_weights --v | |
  bbox_outside_weights --------(SmoothL1Loss)--> loss_bbox


			 
TODO: then rpn.proposal_layer, then resume from there.
